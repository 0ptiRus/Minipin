@using exam_frontend.Entities
@using exam_frontend.Models
@using exam_frontend.Services
@inject IHttpContextAccessor HttpContextAccessor
@inject HttpClient Http
@inject IApiService api

<head>
    <link rel="stylesheet" href="~/css/post/details.css"/>
</head>

<div class="comments">
    @foreach (var comment in @Comments)
    {
        <div class="comment">@comment.Text</div>
    }
</div>

<EditForm Model="@new_comment" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="new_comment.Text" id="commentText" placeholder="Write a comment.." />
    <button type="submit" onclick="">Post Comment</button>
</EditForm>

@code {
    [Parameter] public List<CommentModel> Comments { get; set; }
    [Parameter] public int PostId { get; set; }
    [Parameter] public string UserId { get; set; }

    private CommentModel new_comment = new();
    
    private async Task HandleValidSubmit()
    {
        // HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post,
        //     $"/Comment?image_id={ImageId}&user_id={UserId}&text={new_comment.Text}");
        // IRequestCookieCollection cookies = HttpContextAccessor.HttpContext.Request.Cookies;
        //
        // foreach (var cookie in cookies)
        // {
        //     request.Headers.TryAddWithoutValidation("Cookie", $"{cookie.Key}={cookie.Value};");
        // }
        //
        // HttpResponseMessage response = await Http.SendAsync(request);

        HttpResponseMessage response = await api.PostAsJsonAsync($"/api/Comments/?id={PostId}&user_id={UserId}&text={new_comment.Text}", null);
        Entities.Comment comment = await response.Content.ReadFromJsonAsync<Entities.Comment>();

        //Comments.Add(new {} );
        new_comment = new();
    }

    public class Comment()
    {
        public string Text { get; set; }
    }

}
