@page
@model exam_frontend.Pages.Account.ResetPassword
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password | Minipin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/account/resetpassword.css">
</head>
<body class="bg-gray-50 min-h-screen">

<!-- Reset Password Section -->
<section class="container mx-auto px-4 py-12">
    <div class="max-w-md mx-auto bg-white rounded-xl reset-container overflow-hidden p-8">
        <div class="text-center mb-8">
            <div class="w-16 h-16 bg-yellow-50 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-lock text-yellow-500 text-2xl"></i>
            </div>
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Create new password</h1>
            <p class="text-gray-600">Your new password must be different from previously used passwords</p>
        </div>

        <!-- Success Message Container -->
        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
        {
        <div class="bg-green-50 border-l-4 border-green-500 p-4 mb-6 success-message">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="fas fa-check-circle text-green-500"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-green-700">@TempData["SuccessMessage"]</p>
                </div>
            </div>
        </div>
        }

        <!-- Error Message Container -->
        @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
        {
        <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="fas fa-exclamation-circle text-red-500"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-red-700">@TempData["ErrorMessage"]</p>
                </div>
            </div>
        </div>
        }
        
        <form method="post">
            <div class="mb-4 relative">
                <input type="password" id="newPassword" asp-for="Model.NewPassword" required placeholder=" "
                       class="input-field w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-400 pr-10">
                <label for="newPassword" class="floating-label">New password</label>
                <span class="password-toggle" id="toggleNewPassword">
                        <i class="far fa-eye"></i>
                    </span>
                <span asp-validation-for="Model.NewPassword" class="text-red-500 text-sm"></span>
            </div>
            <div class="mb-6 relative">
                <input type="password" id="confirmPassword" asp-for="Model.ConfirmPassword" required placeholder=" "
                       class="input-field w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-400 pr-10">
                <label for="confirmPassword" class="floating-label">Confirm password</label>
                <span class="password-toggle" id="toggleConfirmPassword">
                        <i class="far fa-eye"></i>
                    </span>
                <span asp-validation-for="Model.ConfirmPassword" class="text-red-500 text-sm"></span>
            </div>
            <div class="mb-6">
                <h3 class="text-sm font-medium text-gray-700 mb-2">Password requirements:</h3>
                <ul class="text-xs text-gray-600 space-y-1">
                    <li id="lengthReq" class="flex items-center">
                        <i class="fas fa-check-circle text-green-500 mr-2 text-xs"></i>
                        At least 8 characters
                    </li>
                    <li id="numberReq" class="flex items-center">
                        <i class="fas fa-check-circle text-green-500 mr-2 text-xs"></i>
                        Contains a number
                    </li>
                    <li id="specialReq" class="flex items-center">
                        <i class="fas fa-check-circle text-green-500 mr-2 text-xs"></i>
                        Contains a special character
                    </li>
                </ul>
            </div>
            <button type="submit" id="resetBtn"
                    class="w-full py-3 bg-yellow-400 text-white rounded-lg font-medium hover:bg-yellow-500 transition mb-4 flex items-center justify-center">
                Reset Password
            </button>
            <div class="text-center text-sm text-gray-600">
                Remember your password?
                <a href="/Account/Login" class="text-yellow-500 hover:text-yellow-600 font-medium">Log in</a>
            </div>
        </form>
    </div>
</section>

<script>
    // Toggle password visibility
    document.getElementById('toggleNewPassword').addEventListener('click', function () {
        togglePasswordVisibility(document.getElementById('newPassword'), this);
    });
    document.getElementById('toggleConfirmPassword').addEventListener('click', function () {
        togglePasswordVisibility(document.getElementById('confirmPassword'), this);
    });

    function togglePasswordVisibility(input, toggle) {
        if (input.type === 'password') {
            input.type = 'text';
            toggle.innerHTML = '<i class="far fa-eye-slash"></i>';
        } else {
            input.type = 'password';
            toggle.innerHTML = '<i class="far fa-eye"></i>';
        }
    }

    // Validate password in real-time
    document.getElementById('newPassword').addEventListener('input', validatePassword);

    function validatePassword() {
        const password = document.getElementById('newPassword').value;

        // Check length
        if (password.length >= 8) {
            document.getElementById('lengthReq').querySelector('i').className = 'fas fa-check-circle text-green-500 mr-2 text-xs';
        } else {
            document.getElementById('lengthReq').querySelector('i').className = 'fas fa-times-circle text-red-500 mr-2 text-xs';
        }

        // Check for number
        if (/\d/.test(password)) {
            document.getElementById('numberReq').querySelector('i').className = 'fas fa-check-circle text-green-500 mr-2 text-xs';
        } else {
            document.getElementById('numberReq').querySelector('i').className = 'fas fa-times-circle text-red-500 mr-2 text-xs';
        }

        // Check for special character
        if (/[!#$%^&*(),.?":{}|<>]/.test(password)) {
            document.getElementById('specialReq').querySelector('i').className = 'fas fa-check-circle text-green-500 mr-2 text-xs';
        } else {
            document.getElementById('specialReq').querySelector('i').className = 'fas fa-times-circle text-red-500 mr-2 text-xs';
        }
    }
</script>
</body>
</html>