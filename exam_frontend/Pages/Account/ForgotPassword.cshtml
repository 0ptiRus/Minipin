@page
@model exam_frontend.Pages.Account.ForgotPassword

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password | Minipin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/account/forgotpassword.css">
</head>
<body class="bg-gray-50 min-h-screen">

<!-- Forgot Password Section -->
<section class="container mx-auto px-4 py-12">
    <div class="max-w-md mx-auto bg-white rounded-xl forgot-container overflow-hidden p-8">
        <div class="text-center mb-8">
            <div class="w-16 h-16 bg-yellow-50 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-key text-yellow-500 text-2xl"></i>
            </div>
            <h1 class="text-3xl font-bold text-gray-800 mb-2">Reset your password</h1>
            <p class="text-gray-600">Enter your email and we'll send you a link to reset your password</p>
        </div>

        <!-- Success Message Container -->
        @if (!string.IsNullOrEmpty(TempData["SuccessMessage"]?.ToString()))
        {
        <div class="bg-green-50 border-l-4 border-green-500 p-4 mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="fas fa-check-circle text-green-500"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-green-700">@TempData["SuccessMessage"]</p>
                </div>
            </div>
        </div>
        }

        <!-- Error Message Container -->
        @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
        {
        <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6">
            <div class="flex">
                <div class="flex-shrink-0">
                    <i class="fas fa-exclamation-circle text-red-500"></i>
                </div>
                <div class="ml-3">
                    <p class="text-sm text-red-700">@TempData["ErrorMessage"]</p>
                </div>
            </div>
        </div>
        }

        <!-- Reset Form -->
        <form method="post">
            <div class="mb-6 relative">
                <input type="email" id="email" asp-for="Email" required placeholder=" "
                       class="input-field w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-400">
                <label for="email" class="floating-label">Email address</label>
                <span asp-validation-for="Email" class="text-red-500 text-sm"></span>
            </div>

            <button type="submit" class="w-full py-3 bg-yellow-400 text-white rounded-lg font-medium hover:bg-yellow-500 transition mb-4 flex items-center justify-center">
                Send Reset Link
            </button>

            <div class="text-center text-sm text-gray-600">
                Remember your password?
                <a href="/Account/Login" class="text-yellow-500 hover:text-yellow-600 font-medium">Log in</a>
            </div>
        </form>
    </div>
</section>

<script>
    // Form submission
    const resetForm = document.getElementById('resetForm');
    const resetBtn = document.getElementById('resetBtn');
    const successContainer = document.getElementById('successContainer');
    const successMessage = document.getElementById('successMessage');
    const errorContainer = document.getElementById('errorContainer');
    const errorMessage = document.getElementById('errorMessage');

    resetForm.addEventListener('submit', function(e) {
        e.preventDefault();

        const email = document.getElementById('email').value;

        // Basic email validation
        if (!email.includes(@Html.Encode('@')) || !email.includes('.')) {
            errorMessage.textContent = "Please enter a valid email address";
            errorContainer.classList.remove('hidden');
            setTimeout(() => errorContainer.classList.add('hidden'), 5000);
            return;
        }

        // Show loading state
        resetBtn.disabled = true;
        resetBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Sending...';

        resetBtn.disabled = false;
        resetBtn.textContent = 'Send Reset Link';

        // Clear form
        resetForm.reset();
    });

    // Floating label functionality
    const emailInput = document.getElementById('email');
    emailInput.addEventListener('focus', function() {
        this.nextElementSibling.classList.add('text-yellow-500');
    });
    emailInput.addEventListener('blur', function() {
        this.nextElementSibling.classList.remove('text-yellow-500');
    });
</script>
</body>
</html>