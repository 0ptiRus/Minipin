@page "{post_id}"
@using System.Security.Claims
@using exam_frontend.Components
@using exam_frontend.Models
@using Microsoft.EntityFrameworkCore.Infrastructure
@model Details
@* @{ *@
@*     ViewData["Title"] = "Image Details"; *@
@* } *@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pin Details | Minipin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/post/details.css?v=@DateTime.Now.Ticks"/>
</head>
<body class="bg-gray-50 min-h-screen">
<!-- Back Button -->
<div class="container mx-auto px-4 py-4">
    <button onclick="window.history.back()" class="flex items-center text-gray-600 hover:text-yellow-500">
        <i class="fas fa-arrow-left mr-2"></i>
        Back
    </button>
</div>

<!-- Pin Details Section -->
<main class="container mx-auto px-4 py-6">
    <div class="bg-white rounded-xl shadow-sm overflow-hidden">
        <div class="pin-details flex flex-col md:flex-row">
            <!-- Pin Image -->
            <div class="w-full md:w-2/3 flex items-center justify-center p-4 bg-gray-100">
                <img src="@Model.Post.ImageUrl"
                     alt="Minimalist Living Room"
                     class="pin-image w-full h-auto object-contain rounded-lg shadow">
            </div>

            <!-- Pin Info -->
            <div class="w-full md:w-1/3 p-6">
                <div class="flex justify-between items-start mb-4">
                    <div>
                        <div class="flex items-center">
                            <h1 id="pinTitle" class="text-2xl font-bold text-gray-800 mb-2">@Model.Post.Name</h1>
                            <button id="editPinBtn" class="ml-2 text-gray-400 hover:text-yellow-500">
                                <i class="fas fa-pencil-alt text-sm"></i>
                            </button>
                        </div>
                        <p class="text-gray-600 mb-4">@Model.Post.Username</p>
                    </div>
                    
                    <form method="post" class="relative">
                        <input type="hidden" name="PostId" value="@Model.Post.Id"/>
                        <input type="hidden" name="UserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)"/>
                        <button type="button" id="saveButton" class="w-10 h-10 bg-yellow-400 rounded-full flex items-center justify-center text-white hover:bg-yellow-500 transition">
                            <i class="fas fa-thumbtack"></i>
                        </button>
                        <div id="boardSelector" class="board-selector">
                            <div class="p-3 border-b border-gray-200">
                                <h3 class="font-semibold text-gray-800">Save to board</h3>
                            </div>
                            <div class="p-2">
                                <input type="text" placeholder="Search boards" class="w-full px-3 py-2 mb-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-yellow-400">
                                <div class="max-h-60 overflow-y-auto">
                                    @foreach (PreviewGalleryModel gallery in Model.Galleries)
                                    {
                                        <div class="board-item p-3 rounded-lg cursor-pointer flex items-center">
                                            <input type="hidden" name="GalleryId"  value="@gallery.Id"/>
                                            <img src="@gallery.CoverUrl" class="w-8 h-8 bg-gray-200 rounded-md mr-3" alt="Cover for gallery">
                                            <button type="submit">
                                                <p class="font-medium text-gray-800">@gallery.Name</p>
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="p-3 border-t border-gray-200">
                                <a href="/Gallery/Create" class="w-full py-2 bg-gray-100 hover:bg-gray-200 rounded-lg text-gray-800 font-medium text-sm">
                                    <i class="fas fa-plus mr-2"></i> Create gallery
                                </a>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="mb-6">
                    <p class="text-gray-700 mb-4">
                        @Model.Post.Description
                    </p>
                    @* <div class="flex flex-wrap gap-2 mb-4"> *@
                    @*     <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm">#interior</span> *@
                    @*     <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm">#design</span> *@
                    @*     <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm">#minimalism</span> *@
                    @*     <span class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm">#scandinavian</span> *@
                    @* </div> *@
                </div>

                <div class="border-t border-gray-200 mt-4 pt-4">
                    <div class="flex items-center justify-between mb-3">
                        <h3 class="font-semibold text-gray-800">Comments (@Model.Post.Comments.Count)</h3>
                    </div>
                </div>

                <component type="typeof(CommentSection)"
                           render-mode="Server"
                           param-PostId="@Model.Post.Id"
                           param-Comments="@Model.Post.Comments" />
            </div>
        </div>
    </div>
    
    <div id="editModal" class="edit-modal">
        <form method="post" asp-page-handler="Edit" class="edit-modal-content bg-white rounded-xl w-full max-w-md mx-4">
            <input type="hidden" asp-for="Post.Id" />
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-bold text-gray-800">Edit Pin Details</h3>
                    <button type="reset" id="closeModalBtn" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>

                <div class="space-y-4">
                    <div>
                        <label for="editTitle" asp-for="Post.Name" class="block text-sm font-medium text-gray-700 mb-1">Title</label>
                        <input type="text" asp-for="Post.Name" id="editTitle" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400">
                    </div>

                    <div>
                        <label for="editDescription" asp-for="Post.Description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                        <textarea id="editDescription" asp-for="Post.Description" rows="12" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400"></textarea>
                    </div>

                    <div class="flex justify-end space-x-3 pt-2">
                        <button type="reset" id="cancelEditBtn" class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" id="saveEditBtn" class="px-4 py-2 bg-yellow-400 rounded-lg text-white hover:bg-yellow-500">
                            Save Changes
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</main>

<!-- Create Pin Button (Mobile) -->
<div class="fixed bottom-6 right-6 md:hidden">
    <button class="w-14 h-14 bg-yellow-400 rounded-full flex items-center justify-center text-white shadow-lg">
        <i class="fas fa-plus text-xl"></i>
    </button>
</div>

<script>

    document.addEventListener("DOMContentLoaded", function () {
        // Comment functionality
        const commentTextarea = document.getElementById('comment-textarea');
        const commentActions = document.getElementById('comment-actions');
        const cancelComment = document.getElementById('cancel-comment');
        const postComment = document.getElementById('post-comment');
        const commentsContainer = document.getElementById('comments-container');

        // Simple search functionality
        document.querySelectorAll('.search-bar').forEach(input => {
            input.addEventListener('keyup', function(e) {
                if (e.key === 'Enter') {
                    alert('Searching for: ' + this.value);
                }
            });
        });


        function adjustTextareaHeight(textarea) {
            textarea.style.height = 'auto';
            if (textarea.value.trim().length > 0) {
                textarea.style.height = (textarea.scrollHeight) + 'px';
            }
        }

        document.querySelectorAll('textarea').forEach(textarea => {
            textarea.addEventListener('input', function() {
                adjustTextareaHeight(this);
            });

            // Initial adjustment
            adjustTextareaHeight(textarea);
        });

        // Board selector functionality
        const saveButton = document.getElementById('saveButton');
        const boardSelector = document.getElementById('boardSelector');
        let isSaved = false;
        saveButton.addEventListener('click', function(e) {
            e.stopPropagation();
            e.preventDefault();
            if (isSaved) {

                console.log('Saved')
                // Already saved - unsave
                const icon = this.querySelector('i');
                icon.classList.remove('fa-check');
                icon.classList.add('fa-thumbtack');
                this.classList.remove('bg-green-500');
                this.classList.add('bg-yellow-400');
                boardSelector.classList.remove('active');
                isSaved = false;
            } else {
                console.log('Not saved')
                // Show board selector
                boardSelector.classList.toggle('active');
            }
        });

        document.addEventListener('click', function(e) {
            if (!boardSelector.contains(e.target) && e.target !== saveButton) {
                boardSelector.classList.remove('active');
            }
        });

        const boardItems = document.querySelectorAll('.board-item');
        boardItems.forEach(item => {
            item.addEventListener('click', function() {
                const icon = saveButton.querySelector('i');
                icon.classList.remove('fa-thumbtack');
                icon.classList.add('fa-check');
                saveButton.classList.remove('bg-yellow-400');
                saveButton.classList.add('bg-green-500');
                boardSelector.classList.remove('active');
                isSaved = true;
                const boardName = this.querySelector('p').textContent;
                alert(`Pin saved to "${boardName}" board!`);
            });
        });
    });

    // Edit modal functionality
    const editModal = document.getElementById('editModal');
    const editPinBtn = document.getElementById('editPinBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const cancelEditBtn = document.getElementById('cancelEditBtn');
    const saveEditBtn = document.getElementById('saveEditBtn');
    const editTitle = document.getElementById('editTitle');
    const editDescription = document.getElementById('editDescription');
    const pinTitle = document.getElementById('pinTitle');
    const pinDescription = document.getElementById('pinDescription');

    // Open modal for title edit
    editPinBtn.addEventListener('click', function() {
        editModal.classList.add('active');
    });


    // Close modal
    function closeModal() {
        editModal.classList.remove('active');
    }

    closeModalBtn.addEventListener('click', closeModal);
    cancelEditBtn.addEventListener('click', closeModal);

    // Save changes
    saveEditBtn.addEventListener('click', function() {
        closeModal();
    });

    // Close modal when clicking outside
    editModal.addEventListener('click', function(e) {
        if (e.target === editModal) {
            closeModal();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && editModal.classList.contains('active')) {
            closeModal();
        }
    });

</script>
</body>
</html>