@page
@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model exam_frontend.Pages.Gallery.Create
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Board | Minipin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .board-cover-container {
            border: 2px dashed #d1d5db;
            transition: all 0.3s;
        }
        .board-cover-container:hover {
            border-color: #f59e0b;
        }
        .board-cover-preview {
            max-height: 300px;
            object-fit: cover;
            border-radius: 0.75rem;
        }
        .collaborator-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: 2px solid white;
            margin-left: -8px;
        }
        .collaborator-avatar:first-child {
            margin-left: 0;
        }
        .collaborator-input {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background-color: #f3f4f6;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #9ca3af;
            cursor: pointer;
            transition: all 0.2s;
        }
        .collaborator-input:hover {
            background-color: #e5e7eb;
            color: #6b7280;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
<!-- Create Board Section -->
<section class="container mx-auto px-4 py-8">
    <div class="bg-white rounded-xl shadow-sm p-6 max-w-3xl mx-auto">
        <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-6">Create a new Board</h1>

        <form method="post" enctype="multipart/form-data" class="flex flex-col gap-8">
            <input type="hidden" asp-for="Model.UserId" value="@User.FindFirstValue("nameid")"/>
            <!-- Board Cover -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Board Cover</label>
                <div id="boardCoverContainer" class="board-cover-container rounded-xl bg-gray-50 flex flex-col items-center justify-center p-8 text-center cursor-pointer">
                    <div id="coverIcon" class="text-gray-400 mb-3">
                        <i class="fas fa-image text-4xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-700 mb-1">Add a cover photo</h3>
                    <p class="text-gray-500 text-sm">Make your board stand out</p>
                    <input asp-for="Model.Image" type="file" id="coverInput" class="hidden" accept="image/*">
                </div>

                <div id="coverPreviewContainer" class="hidden rounded-xl overflow-hidden mt-4">
                    <img id="coverPreview" src="#" alt="Cover Preview" class="w-full board-cover-preview">
                </div>

                <div class="flex justify-end mt-4">
                    <button type="button" id="changeCoverBtn" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-full font-medium hover:bg-gray-100 transition hidden mr-2">
                        <i class="fas fa-sync-alt mr-2"></i>Change
                    </button>
                    <button type="button" id="removeCoverBtn" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-full font-medium hover:bg-gray-100 transition hidden">
                        <i class="fas fa-trash-alt mr-2"></i>Remove
                    </button>
                </div>
            </div>

            <!-- Board Details -->
            <div>
                <div class="mb-6">
                    <label asp-for="Model.Name" for="boardName" class="block text-sm font-medium text-gray-700 mb-1">Board Name</label>
                    <input asp-for="Model.Name" type="text" id="boardName" placeholder="Like 'Kitchen Ideas' or 'Travel Plans'"
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400">
                </div>

                <div class="mb-6">
                    <label asp-for="Model.Description" for="boardDescription" class="block text-sm font-medium text-gray-700 mb-1">Description (optional)</label>
                    <textarea asp-for="Model.Description" id="boardDescription" rows="3" placeholder="What's this board about?"
                              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-400 focus:border-yellow-400"></textarea>
                </div>

                <div class="mb-6">
                    <label  for="boardPrivacy" class="block text-sm font-medium text-gray-700 mb-1">Privacy</label>
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center">
                            <input asp-for="Privacy" type="radio" id="public" name="Privacy" value="public" checked
                                   class="h-4 w-4 text-yellow-500 focus:ring-yellow-400 border-gray-300">
                            <label for="public" class="ml-2 block text-sm text-gray-700">
                                <span class="font-medium">Public</span>
                                <p class="text-xs text-gray-500">Anyone can see this board</p>
                            </label>
                        </div>
                        <div class="flex items-center">
                            <input asp-for="Privacy" type="radio" id="private" name="Privacy" value="private"
                                   class="h-4 w-4 text-yellow-500 focus:ring-yellow-400 border-gray-300">
                            <label for="private" class="ml-2 block text-sm text-gray-700">
                                <span class="font-medium">Private</span>
                                <p class="text-xs text-gray-500">Only you and collaborators can see</p>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="flex justify-end space-x-4 pt-4">
                    <button id="cancelBoardBtn" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-full font-medium hover:bg-gray-100 transition">
                        Cancel
                    </button>
                    <button type="submit" id="createBoardBtn" class="px-6 py-2 bg-yellow-400 text-white rounded-full font-medium hover:bg-yellow-500 transition disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                        Create Board
                    </button>
                </div>
            </div>
        </form>
    </div>
</section>

<script>
    // DOM Elements
    const boardCoverContainer = document.getElementById('boardCoverContainer');
    const coverInput = document.getElementById('coverInput');
    const coverPreviewContainer = document.getElementById('coverPreviewContainer');
    const coverPreview = document.getElementById('coverPreview');
    const coverIcon = document.getElementById('coverIcon');
    const changeCoverBtn = document.getElementById('changeCoverBtn');
    const removeCoverBtn = document.getElementById('removeCoverBtn');
    const createBoardBtn = document.getElementById('createBoardBtn');
    const boardName = document.getElementById('boardName');
    const addCollaboratorBtn = document.getElementById('addCollaboratorBtn');

    // Cover Image Handling
    boardCoverContainer.addEventListener('click', () => coverInput.click());

    coverInput.addEventListener('change', function(e) {
        if (this.files && this.files[0]) {
            const reader = new FileReader();

            reader.onload = function(e) {
                coverPreview.src = e.target.result;
                coverPreviewContainer.classList.remove('hidden');
                boardCoverContainer.classList.add('hidden');
                coverIcon.classList.add('hidden');
                changeCoverBtn.classList.remove('hidden');
                removeCoverBtn.classList.remove('hidden');

                // Enable create button if name is filled
                if (boardName.value.trim() !== '') {
                    createBoardBtn.disabled = false;
                }
            }

            reader.readAsDataURL(this.files[0]);
        }
    });

    changeCoverBtn.addEventListener('click', () => coverInput.click());

    removeCoverBtn.addEventListener('click', function() {
        coverInput.value = '';
        coverPreviewContainer.classList.add('hidden');
        boardCoverContainer.classList.remove('hidden');
        coverIcon.classList.remove('hidden');
        changeCoverBtn.classList.add('hidden');
        removeCoverBtn.classList.add('hidden');
        createBoardBtn.disabled = boardName.value.trim() === '';
    });

    // Form Validation
    boardName.addEventListener('input', function() {
        if (this.value.trim() !== '') {
            createBoardBtn.disabled = false;
        } else {
            createBoardBtn.disabled = true;
        }
    });

    // Add Collaborator
    addCollaboratorBtn.addEventListener('click', function() {
        const email = prompt("Enter collaborator's email:");
        if (email) {
            // In a real app, you would validate the email and add the user
            alert(`Invitation sent to ${email}`);
        }
    });

    // Create Board Button
    createBoardBtn.addEventListener('click', function() {
        // Reset form
        coverInput.value = '';
        coverPreviewContainer.classList.add('hidden');
        boardCoverContainer.classList.remove('hidden');
        coverIcon.classList.remove('hidden');
        changeCoverBtn.classList.add('hidden');
        removeCoverBtn.classList.add('hidden');
        boardName.value = '';
        document.getElementById('boardDescription').value = '';
        document.getElementById('public').checked = true;
        createBoardBtn.disabled = true;
    });

    // Cancel Button
    document.getElementById('cancelBoardBtn').addEventListener('click', function() {
        if (confirm('Are you sure you want to cancel? All unsaved changes will be lost.')) {
            // Reset form
            coverInput.value = '';
            coverPreviewContainer.classList.add('hidden');
            boardCoverContainer.classList.remove('hidden');
            coverIcon.classList.remove('hidden');
            changeCoverBtn.classList.add('hidden');
            removeCoverBtn.classList.add('hidden');
            boardName.value = '';
            document.getElementById('boardDescription').value = '';
            document.getElementById('public').checked = true;
            createBoardBtn.disabled = true;
        }
    });

    // Search functionality
    document.querySelectorAll('.search-bar').forEach(input => {
        input.addEventListener('keyup', function(e) {
            if (e.key === 'Enter') {
                alert('Searching for: ' + this.value);
            }
        });
    });
</script>
</body>
</html>
