version: '3.8'

services:
  exam_admin:
    container_name: admin
    image: exam_admin
    build:
      context: .
      dockerfile: exam_admin/Dockerfile
    depends_on:
      - exam_api
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:8085
    ports:
      - "7117:8085"
    networks:
      - app-network
  
  exam_api:
    container_name: api
    image: exam_api
    build:
      context: .
      dockerfile: exam_api/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:8089
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionString=Host=postgres;Port=5432;Username=postgres;Password=pass;Database=gallery
      - MinioRootUser=minioadmin
      - MinioRootPassword=minioadmin
    depends_on:
      - postgres
      - minio
    ports:
      - "7279:8089"
    networks:
      - app-network

  exam_frontend:
    container_name: website
    image: exam_frontend
    build:
      context: .
      dockerfile: exam_frontend/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://0.0.0.0:8083
    depends_on:
      - exam_api
    ports:
      - "5135:8083"
    networks:
      - app-network
        
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: gallery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:2345"  
    networks:
      - app-network
      
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address :9001
    networks:
      - app-network
      
  redis:
    image: redis:latest
    command: redis-server 
    ports:
      - "6380:6379"
    networks:
      - app-network
        
volumes:
  minio-data:
  postgres_data:
    driver: local
    
networks:
  app-network:
    driver: bridge